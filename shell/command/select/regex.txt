一个正式表达式是一个字符串.字符串里的字符被称为元字符,它们可能表示了比它们字面上看 
起来的意思更丰富的含义.例如,一个引用符号可能表示引用一个人演讲中的话,或者表示下 
面将要讲到的引申表示的意思.正则表达式是一个字符或/和元字符组合成的字符集,它们匹配 
(或指定)一个模式. 

一个正则表达式包含下面一个或多个项: 
 
  1.  一个字符集. 
    这里的字符集里的字符表示的就是它们字面上的意思.正则表达式最简单的情况就是仅 
    仅由字符集组成,而没有其他的元字符. 
 
  2.  锚.   
    一个锚指明了正则表达式在一行文本中要匹配的位置,例如^和$就是锚. 
 
  3.  修饰符 
    它们用于展开或缩小(即是修改了)正则表达式匹配文本行的范围.修饰符包括了星号. 
    括号和反斜杠符号. 
 
正则表达是的主要作用是用来文本搜索和字串操作.一个正则表达式匹配一个字符或是一串字 
符--完整的一串字符或是另外一个字符串的子串. 


星号    -- * --  匹配前一个字符的任意多次(包括零次). 
      "1133*"匹配 11 +  一个或更多的 3 +  可能的其他字符: 113, 1133, 111312,  等等. 
 
点      -- . --  匹配除了新行符之外的任意一个字符. 
      "13."  匹配 13 +  至少一个任意字符(包括空格): 1133, 11333,  但不匹配  13   
      (因为少了附加的至少一个任意字符). 
 
脱字符    -- ^ --  匹配一行的开头,但依赖于上下文环境,可能在正则表达式中表示否定 
      一个字符集的意思. 
 
美元符    -- $ --  在正则表达式中匹配行尾. 
      "^$"  匹配空行. 
 
方括号    -- [...] --  在正则表达式中表示匹配括号中的一个字符. 
      "[xyz]"  匹配字符 x, y,  或 z. 
 
      "[c-n]"  匹配从字符 c 到 n 之间的任意一个字符. 
 
      "[B-Pk-y]"  匹配从 B 到 P  或从 k 到 y 的任意一个字符.  
      "[a-z0-9]"  匹配任意小写字母或数字. 
 
      "[^b-d]"  匹配除了从 b 到 d 范围内所有的字符.  这是正则表达式中反转意思或取否 
      的一  个例子.(就好像在别的情形中!字符所扮演的角色). 
 
      多个方括号字符集组合使用可以匹配一般的单词和数字模式."[Yy][Ee][Ss]"  匹 
      配 yes, Yes, YES, yEs,  等等.   
      "[0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]"匹配社会安全码 
      (Social Security number). 
 
反斜杠字符  -- \ --  转义(escapes)  一个特殊的字符,使这个字符表示原来字面上的意思. 
      "\$"表示了原来的字面意思"$",而不是在正则表达式中表达的匹配行尾的意思. 
      同样,"\\"也被解释成了字面上的意思"\". 
 
转义(escape)"尖角号" -- \<...\> --  用于表示单词的边界. 
            尖角号必须被转义,因为不这样做的话它们就表示单纯的字面意思 
            而已. 
 
            "\<the\>"  匹配单词"the",但不匹配"them", "there", "other",   
            等等. 
			
			
确定正则表达式能否工作的唯一办法是测试它. 